name: 'Terraform'

on:
  push:
    branches: [ "master" ]
  pull_request:

env:
  ECR_REGISTRY: 603956422639.dkr.ecr.eu-central-1.amazonaws.com
  IMAGE_NAME: nodejs-app
  AWS_REGION: eu-central-1
  EKS_CLUSTER_NAME: space-beacon

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
    # Add the aws creds
    - name: Setup AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    # Create S3 bucket for Terraform state
    - name: Create S3 bucket 
      run: |
        if ! aws s3api head-bucket --bucket space-beacon-erog 2>&1 | grep -q 'Not Found'; then
          echo "Bucket already exists"
        else
          aws s3api create-bucket --bucket space-beacon-erog --region $AWS_REGION --create-bucket-configuration LocationConstraint=$AWS_REGION
          aws s3api put-bucket-versioning --bucket space-beacon-erog --versioning-configuration Status=Enabled
        fi

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -backend-config="bucket=space-beacon-erog" -backend-config="key=prod/terraform.tfstate" -backend-config="region=$AWS_REGION"

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      # On push to "master", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
    
    - name: Set AWS Config
      run: |
        if [[ $(aws eks describe-cluster --name space-beacon --region eu-central-1 2>&1) != *"ResourceNotFoundException"* ]]; then
        aws eks update-kubeconfig --region eu-central-1 --name space-beacon
        fi

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Create ECR repository if it doesn't exist
      run: |
        if ! aws ecr describe-repositories --repository-names $IMAGE_NAME --region $AWS_REGION; then
        aws ecr create-repository --repository-name $IMAGE_NAME
        fi

    - name: Build and tag Docker image
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      id: build-image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
    
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Add Helm repo
      run: |
        helm repo add stable https://charts.helm.sh/stable

    - name: Deploy Helm chart dev
      if: github.ref != 'refs/heads/master' || github.event_name != 'push'
      run: |
        if [[ $(aws eks describe-cluster --name space-beacon --region eu-central-1 2>&1) != *"ResourceNotFoundException"* ]]; then
        helm upgrade --install space-beacon ./sbchart --set image.tag=${{ github.sha }} --namespace space-beacon --create-namespace --dry-run
        fi

    - name: Deploy Helm chart prod
      if: github.ref == 'refs/heads/master' && github.event_name == 'push' 
      run: |
        helm upgrade --install space-beacon ./sbchart --set image.tag=${{ github.sha }} --namespace space-beacon --create-namespace